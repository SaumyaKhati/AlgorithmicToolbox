import java.io.BufferedReader;import java.io.InputStreamReader;public class Main {    public static void main(String[] args) throws Exception{        //I prefer to use buffered reader because it is faster than scanner.        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        //for problem 1        String [] line = br.readLine().split("\\s");        int W = Integer.parseInt(line[0]), n = Integer.parseInt(line[1]);        int [] bars = new int[n];        String [] barAsString = br.readLine().split("\\s");        for(int i =0; i< n; i++){            bars[i]= Integer.parseInt(barAsString[i]);        }        System.out.println(problemOne(W, bars));    }    /**     * This probem requires a straightforward implementation of the discrete backpack (w/out repetitions) pseudocode     * that was taught in the lessons.     * @param W max possible weight of the backpack     * @param bars all of the gold bars available     * @return total weight of bars we can carry     */    private static int problemOne(int W, int [] bars){        int [][] value = new int[bars.length+1][W+1];        for(int i = 1; i < bars.length+1; i++){            for(int j = 1; j < W+1; j++){                value[i][j]= value[i-1][j];                int val = 0;                if(bars[i-1] <= j){                    val= value[i-1][j-bars[i-1]]+bars[i-1];                }                if(val > value[i][j]){                    value[i][j]=val;                }            }        }        return value[bars.length][W];    }}